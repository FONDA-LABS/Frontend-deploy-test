var w=(i,e,t)=>{if(!e.has(i))throw TypeError("Cannot "+t)};var d=(i,e,t)=>{if(e.has(i))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(i):e.set(i,t)};var o=(i,e,t)=>(w(i,e,"access private method"),t);import{B as v}from"./base.js";var l,m,r,u,a,h;class C extends v{constructor(){super();d(this,l);d(this,r);d(this,a)}_init(){super._init(),o(this,l,m).call(this)}_onPageChanged(){super._onPageChanged()}}l=new WeakSet,m=function(){const t=document.querySelectorAll(".facts-animated");t!==null&&t.forEach(s=>{["scroll","resize"].forEach(n=>{window.addEventListener(n,()=>{o(this,r,u).call(this,s)&&o(this,a,h).call(this)})}),o(this,r,u).call(this,s)&&o(this,a,h).call(this)})},r=new WeakSet,u=function(t){const s=t.getBoundingClientRect(),n=window.innerHeight||document.documentElement.clientHeight;return s.top<n&&s.bottom>0},a=new WeakSet,h=function(){const t=document.querySelectorAll(".fact-item"),s=new IntersectionObserver((n,g)=>{n.forEach(c=>{c.isIntersecting&&(c.target.querySelectorAll(".digit").forEach((f,p)=>{setTimeout(()=>{f.classList.add("animate")},p*200)}),c.target.classList.add("in-view"),g.unobserve(c.target))})},{threshold:.4});t.forEach(n=>{s.observe(n)})};export{C as F};
